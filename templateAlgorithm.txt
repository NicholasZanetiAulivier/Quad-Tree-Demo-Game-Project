Global.GAME_ENVIRONMENT.setUpdateFunction(
            (dt) -> {
                this.partition = new GameQuadTree(0, 0, Global.realWidth, Global.realHeight,1);

                Denode<?> item = this.circles.getHead();

                //partition
                while(item != null){
                    partition.insert((ArtificialCircle)item.getData());
                    item = item.getNext();
                }
            
                DoublyLinkedList<DoublyLinkedList<CollisionObject>> results = partition.retrieveAllCollisions();
                Denode<DoublyLinkedList<CollisionObject>> currentListNode = results.getHead();
                while(currentListNode != null){
                    Denode<CollisionObject> currentObject = currentListNode.getData().getHead();
                    while(currentObject != null){
                        CollisionObject p , n;
                        Denode<CollisionObject> other = currentObject.getNext();
                        while(other != null){
                            if ((p=other.getData()) != (n = currentObject.getData()))
                                if (n.checkCollision(p)){
                                    n.isColliding(p);
                                }
                            other = other.getNext();
                            count++;
                        }
                        currentObject = currentObject.getNext();
                    }
                    currentListNode = currentListNode.getNext();
                }

                item = this.circles.getHead();

                //partition
                while(item != null){
                    ((ArtificialCircle)item.getData()).update(dt);
                    item = item.getNext();
                }

            }
        );